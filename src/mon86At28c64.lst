     1                                          CPU 8086
     2                                          BITS 16
     3                                  
     4                                  %imacro setloc  1.nolist
     5                                  %assign pad_bytes (%1-($-$$)-START)
     6                                  %if pad_bytes < 0
     7                                  %assign over_bytes -pad_bytes
     8                                  %error Preceding code extends beyond setloc location by over_bytes bytes
     9                                  %endif
    10                                  %if pad_bytes > 0
    11                                  %warning Inserting pad_bytes bytes
    12                                   times  pad_bytes db 0FFh
    13                                  %endif
    14                                  %endm
    15                                  
    16                                  
    17                                  %define	START		0E000h		; BIOS starts at offset 08000h
    18                                  %define DATE		'22/10/24'
    19                                  %define MODEL_BYTE	0FEh		; IBM PC/XT
    20                                  
    21                                  bioscseg	equ	0F000h
    22                                  biosdseg	equ	0040h
    23                                  LCD_CMD     EQU 0x80
    24                                  LCD_DATA    EQU 0x81
    25                                  ;// commands
    26                                  LCD_CLEARDISPLAY   EQU 0x01
    27                                  LCD_RETURNHOME     EQU 0x02
    28                                  LCD_ENTRYMODESET   EQU 0x04
    29                                  LCD_DISPLAYCONTROL EQU 0x08
    30                                  LCD_CURSORSHIFT    EQU 0x10
    31                                  LCD_FUNCTIONSET    EQU 0x20
    32                                  LCD_SETCGRAMADDR   EQU 0x40
    33                                  LCD_SETDDRAMADDR   EQU 0x80
    34                                  
    35                                  
    36                                          org	START
    37                                  
    38 00000000 EB59                    init:   jmp     init2
    39                                             ;12345678901234567890
    40 00000002 38303838202D204350-     msg0:   db "8088 - CPU TXM/8 III",0
    40 0000000B 552054584D2F382049-
    40 00000014 494900             
    41 00000017 5061756C6F2053696C-     msg1:	db "Paulo Silva  (c)2024",0
    41 00000020 766120202863293230-
    41 00000029 323400             
    42 0000002C 4D6F6E383620562031-     msg2:   db "Mon86 V 1.0.00 2410A",0
    42 00000035 2E302E303020323431-
    42 0000003E 304100             
    43 00000041 314D42206472616D20-     msg3:   db "1MB dram rom at28c64",0
    43 0000004A 726F6D206174323863-
    43 00000053 363400             
    44 00000056 0028145450              row:    db 0, 40, 20, 84, 80
    45                                  
    46                                  init2:
    47 0000005B FA                              cli				; disable interrupts
    48 0000005C FC                              cld				; clear direction flag
    49 0000005D B80070                          mov ax, 0x7000
    50 00000060 8ED0                            mov ss, ax
    51 00000062 B800F0                          mov ax, 0xF000
    52 00000065 8ED8                            mov ds, ax
    53 00000067 31E4                            xor sp, sp
    54 00000069 8EC4                            mov es, sp
    55 0000006B E8BC00                          call lcdInit
    56                                  
    57 0000006E B400                            mov ah, 0
    58 00000070 B000                            mov al, 0
    59 00000072 E88900                          call setCursor
    60 00000075 BB[0200]                        mov	bx,msg0
    61 00000078 E84600                          call printstr
    62                                  
    63 0000007B B400                            mov ah, 0
    64 0000007D B001                            mov al, 1
    65 0000007F E87C00                          call setCursor
    66 00000082 BB[1700]                        mov	bx,msg1
    67 00000085 E83900                          call printstr
    68                                  
    69 00000088 B400                            mov ah, 0
    70 0000008A B002                            mov al, 2
    71 0000008C E86F00                          call setCursor
    72 0000008F BB[2C00]                        mov	bx,msg2
    73 00000092 E82C00                          call printstr
    74                                  
    75 00000095 B400                            mov ah, 0
    76 00000097 B003                            mov al, 3
    77 00000099 E86200                          call setCursor
    78 0000009C BB[4100]                        mov	bx,msg3
    79 0000009F E81F00                          call printstr
    80                                  
    81                                  loop:
    82 000000A2 EBFE                            jmp loop
    83 000000A4 C3                              ret
    84                                  
    85                                  printAL:
    86 000000A5 E681                            out LCD_DATA, al
    87 000000A7 B90016                          mov cx, 0x1600
    88 000000AA E8D400                          call basicDelay
    89 000000AD C3                              ret
    90                                  
    91                                  printAX:
    92 000000AE E681                            out LCD_DATA, al
    93 000000B0 B90016                          mov cx, 0x1600
    94 000000B3 E8CB00                          call basicDelay
    95 000000B6 88E0                            mov al,ah
    96 000000B8 E681                            out LCD_DATA, al
    97 000000BA B90016                          mov cx, 0x1600
    98 000000BD E8C100                          call basicDelay
    99 000000C0 C3                              ret
   100                                  
   101                                  printstr:
   102 000000C1 3E8A07                          mov al,byte ds:[bx]
   103 000000C4 3C00                            cmp al,0h
   104 000000C6 7406                            jz  fim
   105 000000C8 E8DAFF                          call printAL
   106 000000CB 43                              inc bx
   107 000000CC EBF3                            jmp printstr
   108 000000CE C3                      fim:    ret
   109                                  
   110                                  writeRam:
   111 000000CF 50                              push AX
   112 000000D0 B80000                          mov AX, 0h
   113 000000D3 8ED8                            mov DS, AX
   114 000000D5 58                              pop AX
   115 000000D6 A30000                          mov [0h], AX
   116 000000D9 C3                              ret
   117                                  readRam:
   118 000000DA B80000                          mov AX, 0h
   119 000000DD 8ED8                            mov DS, AX
   120 000000DF A10000                          mov AX,[0h]
   121 000000E2 C3                              ret
   122                                  ;byte_to_hex_str
   123                                  ;This function return in AX the ascii code for hexadecimal number from 0 to F
   124                                  ;Parameters:
   125                                  ;               AL = imput
   126                                  ;               AX = output
   127                                  ;Changes CL
   128                                  byte_to_hex_str:
   129 000000E3 88C4                            mov ah, al
   130 000000E5 B104                            mov cl, 4
   131 000000E7 D2E8                            shr al, cl
   132 000000E9 250F0F                          and ax, 0x0f0f
   133 000000EC 3C09                            cmp al, 0x09
   134 000000EE 7602                            jbe .1
   135 000000F0 0407                            add al, 'A' - '0' - 10
   136                                  .1:
   137 000000F2 80FC09                          cmp ah, 0x09
   138 000000F5 7603                            jbe .2
   139 000000F7 80C407                          add ah, 'A' - '0' - 10
   140                                  .2:
   141 000000FA 053030                          add ax, "00"
   142                                  .ret:
   143 000000FD C3                              ret
   144                                  
   145                                  setCursor:
   146 000000FE 50                              push AX
   147 000000FF 30E4                            xor  ah,ah            ; limpa AH
   148 00000101 BB[5600]                        mov  bx, row          ; pega o endere√ßo do array
   149 00000104 01D8                            add  ax,bx            ; soma com o endereco com AL 1000+1 = 1001=40
   150 00000106 89C3                            mov  bx, ax           ; poe o 1001 no bx
   151 00000108 3E8A07                          mov  al, byte ds:[bx] ; bl = 40 lido da memoria 1001 em bx
   152 0000010B 88C3                            mov  bl, al
   153 0000010D 58                              pop  AX               ; resgata AH
   154 0000010E 88D8                            mov  al, bl
   155 00000110 00E0                            add  al, ah
   156 00000112 0C80                            or   al, LCD_SETDDRAMADDR ;| ( ah + al)
   157 00000114 E680                            out LCD_CMD, al
   158 00000116 B90016                          mov cx, 0x1600
   159 00000119 E86500                          call basicDelay
   160                                  
   161 0000011C C3                              ret
   162                                  setCursor2:
   163 0000011D B01D                            mov  al, 29
   164 0000011F 0C80                            or   al, LCD_SETDDRAMADDR ;| ( ah + al)
   165 00000121 E680                            out LCD_CMD, al
   166 00000123 B90016                          mov cx, 0x1600
   167 00000126 E85800                          call basicDelay
   168 00000129 C3                              ret
   169                                  
   170                                  lcdInit:
   171 0000012A B90048                          mov cx, 0x4800
   172 0000012D E85100                          call basicDelay
   173                                  
   174 00000130 B030                            mov al, 0x30
   175 00000132 E680                            out LCD_CMD, al
   176                                  
   177 00000134 B90008                          mov cx, 0x0800
   178 00000137 E84700                          call basicDelay
   179                                  
   180 0000013A B030                            mov al, 0x30
   181 0000013C E680                            out LCD_CMD, al
   182                                  
   183 0000013E B96001                          mov cx, 0x0160
   184 00000141 E83D00                          call basicDelay
   185                                  
   186 00000144 B038                            mov al, 0x38    ; function set
   187 00000146 E680                            out LCD_CMD, al
   188                                  
   189 00000148 B90016                          mov cx, 0x1600
   190 0000014B E83300                          call basicDelay
   191                                  
   192 0000014E B008                            mov al, 0x08    ; display off
   193 00000150 E680                            out LCD_CMD, al
   194                                  
   195 00000152 B90016                          mov cx, 0x1600
   196 00000155 E82900                          call basicDelay
   197                                  
   198 00000158 B001                            mov al, 0x01    ; clear display
   199 0000015A E680                            out LCD_CMD, al
   200                                  
   201 0000015C B90016                          mov cx, 0x1600
   202 0000015F E81F00                          call basicDelay
   203                                  
   204 00000162 B002                            mov al, 0x02    ; return home
   205 00000164 E680                            out LCD_CMD, al
   206                                  
   207 00000166 B90016                          mov cx, 0x1600
   208 00000169 E81500                          call basicDelay
   209                                  
   210 0000016C B006                            mov al, 0x06    ; entry mode set
   211 0000016E E680                            out LCD_CMD, al
   212                                  
   213 00000170 B90016                          mov cx, 0x1600
   214 00000173 E80B00                          call basicDelay
   215                                  
   216 00000176 B00C                            mov al, 0x0c    ; display on, no cursor
   217 00000178 E680                            out LCD_CMD, al
   218                                  
   219 0000017A B90016                          mov cx, 0x1600
   220 0000017D E80100                          call basicDelay
   221 00000180 C3                              ret
   222                                  
   223                                  basicDelay:
   224 00000181 49                              dec cx
   225 00000182 75FD                            jnz basicDelay
   226 00000184 C3                              ret
   227                                  
   228                                  
   229 00000185 FF<rep 1E6Bh>                   setloc	0FFF0h			; Power-On Entry Point
   229          ******************       warning: Inserting 7787 bytes [-w+user]
   230                                  reset:
   231 00001FF0 EA[0000]00F0                    jmp 0xF000:init
   232                                  
   233                                          setloc	0FFF5h			; ROM Date in ASCII
   234 00001FF5 32322F31302F3234                db	DATE			; BIOS release date MM/DD/YY
   235 00001FFD 20                              db	20h
   236                                  
   237                                          setloc	0FFFEh			; System Model byte
   238 00001FFE FE                              db	MODEL_BYTE
   239 00001FFF FF                              db	0ffh
   240                                  
   241                                  
